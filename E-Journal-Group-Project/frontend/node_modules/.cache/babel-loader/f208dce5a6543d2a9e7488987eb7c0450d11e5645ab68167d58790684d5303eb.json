{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadya\\\\Documents\\\\uni\\\\sem 6\\\\lekcii\\\\major\\\\Spring\\\\fullstack-backend\\\\E-Journal\\\\E-Journal-Group-Project\\\\frontend\\\\src\\\\components\\\\AddSchool.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axiosInstance';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSchool = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // If using React Router for parameter extraction\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [schoolTypeId, setSchoolTypeId] = useState('');\n  const [schoolTypes, setSchoolTypes] = useState([]);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  useEffect(() => {\n    const fetchSchoolTypes = async () => {\n      try {\n        const response = await axios.get('/school-type/');\n        setSchoolTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching school types:', error);\n        setError('Error fetching school types');\n      }\n    };\n    fetchSchoolTypes();\n    if (id) {\n      // Fetch existing school details if ID exists (edit mode)\n      fetchSchoolDetails(id);\n    }\n  }, [id]);\n  const fetchSchoolDetails = async id => {\n    try {\n      const response = await axios.get(`/school/${id}`);\n      const {\n        name,\n        address,\n        schoolType\n      } = response.data;\n      setName(name);\n      setAddress(address);\n      setSchoolTypeId(schoolType.id); // Assuming schoolType contains id of selected school type\n    } catch (error) {\n      console.error('Error fetching school details:', error);\n      setError('Error fetching school details');\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      if (id) {\n        // Update existing school\n        await axios.put(`/school/${id}`, {\n          name,\n          address,\n          schoolTypeId\n        });\n        setSuccessMessage('School updated successfully!');\n      } else {\n        // Add new school\n        await axios.post('/school/', {\n          name,\n          address,\n          schoolTypeId\n        });\n        setSuccessMessage('School added successfully!');\n      }\n      // Optionally, you can redirect or set a timer to clear success message\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000); // Clear success message after 3 seconds\n    } catch (error) {\n      setError('Error saving school');\n      console.error('Error saving school:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: id ? 'Edit School' : 'Add New School'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          className: \"form-label\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"nameInput\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"addressInput\",\n          className: \"form-label\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"addressInput\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"schoolTypeSelect\",\n          className: \"form-label\",\n          children: \"School Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"schoolTypeSelect\",\n          className: \"form-select\",\n          value: schoolTypeId,\n          onChange: e => setSchoolTypeId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select School Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), schoolTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.id,\n            children: type.schoolType\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary me-2\",\n          children: id ? 'Save Changes' : 'Add School'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/schools\",\n          className: \"btn btn-secondary\",\n          children: \"Back to Schools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(AddSchool, \"fc6XU4LMX11Xjdlx38ytDJixciw=\", false, function () {\n  return [useParams];\n});\n_c = AddSchool;\nexport default AddSchool;\nvar _c;\n$RefreshReg$(_c, \"AddSchool\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useParams","jsxDEV","_jsxDEV","AddSchool","_s","id","name","setName","address","setAddress","schoolTypeId","setSchoolTypeId","schoolTypes","setSchoolTypes","error","setError","successMessage","setSuccessMessage","fetchSchoolTypes","response","get","data","console","fetchSchoolDetails","schoolType","handleSubmit","event","preventDefault","put","post","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","e","target","required","map","to","_c","$RefreshReg$"],"sources":["C:/Users/nadya/Documents/uni/sem 6/lekcii/major/Spring/fullstack-backend/E-Journal/E-Journal-Group-Project/frontend/src/components/AddSchool.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axiosInstance';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst AddSchool = () => {\r\n    const { id } = useParams(); // If using React Router for parameter extraction\r\n    const [name, setName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [schoolTypeId, setSchoolTypeId] = useState('');\r\n    const [schoolTypes, setSchoolTypes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchSchoolTypes = async () => {\r\n            try {\r\n                const response = await axios.get('/school-type/');\r\n                setSchoolTypes(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching school types:', error);\r\n                setError('Error fetching school types');\r\n            }\r\n        };\r\n\r\n        fetchSchoolTypes();\r\n\r\n        if (id) {\r\n            // Fetch existing school details if ID exists (edit mode)\r\n            fetchSchoolDetails(id);\r\n        }\r\n    }, [id]);\r\n\r\n    const fetchSchoolDetails = async (id) => {\r\n        try {\r\n            const response = await axios.get(`/school/${id}`);\r\n            const { name, address, schoolType } = response.data;\r\n            setName(name);\r\n            setAddress(address);\r\n            setSchoolTypeId(schoolType.id); // Assuming schoolType contains id of selected school type\r\n        } catch (error) {\r\n            console.error('Error fetching school details:', error);\r\n            setError('Error fetching school details');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (id) {\r\n                // Update existing school\r\n                await axios.put(`/school/${id}`, {\r\n                    name,\r\n                    address,\r\n                    schoolTypeId\r\n                });\r\n                setSuccessMessage('School updated successfully!');\r\n            } else {\r\n                // Add new school\r\n                await axios.post('/school/', {\r\n                    name,\r\n                    address,\r\n                    schoolTypeId\r\n                });\r\n                setSuccessMessage('School added successfully!');\r\n            }\r\n            // Optionally, you can redirect or set a timer to clear success message\r\n            setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000); // Clear success message after 3 seconds\r\n        } catch (error) {\r\n            setError('Error saving school');\r\n            console.error('Error saving school:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2 className=\"mb-4\">{id ? 'Edit School' : 'Add New School'}</h2>\r\n            {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n            {successMessage && <div className=\"alert alert-success\">{successMessage}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"nameInput\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"addressInput\" className=\"form-label\">Address:</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"addressInput\" value={address} onChange={(e) => setAddress(e.target.value)} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"schoolTypeSelect\" className=\"form-label\">School Type:</label>\r\n                    <select id=\"schoolTypeSelect\" className=\"form-select\" value={schoolTypeId} onChange={(e) => setSchoolTypeId(e.target.value)} required>\r\n                        <option value=\"\">Select School Type</option>\r\n                        {schoolTypes.map(type => (\r\n                            <option key={type.id} value={type.id}>{type.schoolType}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary me-2\">{id ? 'Save Changes' : 'Add School'}</button>\r\n                    <Link to=\"/schools\" className=\"btn btn-secondary\">Back to Schools</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddSchool;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}