{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadya\\\\Documents\\\\uni\\\\sem 6\\\\lekcii\\\\major\\\\Spring\\\\fullstack-backend\\\\E-Journal\\\\E-Journal-Group-Project\\\\frontend\\\\src\\\\adminView\\\\StudentsGrades.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axiosInstance';\nimport { useParams, Link } from 'react-router-dom';\nimport './StudentsGrades.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentsGrades = () => {\n  _s();\n  const {\n    classId,\n    teacherId,\n    disciplineId\n  } = useParams();\n  const [students, setStudents] = useState([]);\n  const [grades, setGrades] = useState({});\n  const [gradeTypes, setGradeTypes] = useState([]);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedGrades, setSelectedGrades] = useState({});\n  const [editingGrade, setEditingGrade] = useState(null);\n  const [visibleGradeId, setVisibleGradeId] = useState(null);\n  const [teachersAndDisciplines, setTeachersAndDisciplines] = useState([]);\n  const [newTeacherDiscipline, setNewTeacherDiscipline] = useState({\n    teacherId: '',\n    disciplineId: ''\n  });\n  const [editTeacherDiscipline, setEditTeacherDiscipline] = useState(null);\n  const [duplicateError, setDuplicateError] = useState('');\n\n  // Fetch students in the class\n  const fetchStudents = async () => {\n    try {\n      const response = await axios.get(`/students/school-class/${classId}`);\n      setStudents(response.data);\n    } catch (error) {\n      setError('Error fetching students');\n      console.error('Error fetching students:', error);\n    }\n  };\n\n  // Fetch grades for each student\n  const fetchGrades = async () => {\n    try {\n      const response = await axios.get(`/students/${teacherId}/discipline/${disciplineId}/grades`);\n      const gradesData = response.data.reduce((acc, grade) => {\n        acc[grade.studentId] = acc[grade.studentId] || [];\n        acc[grade.studentId].push(grade);\n        return acc;\n      }, {});\n      setGrades(gradesData);\n    } catch (error) {\n      setError('Error fetching grades');\n      console.error('Error fetching grades:', error);\n    }\n  };\n\n  // Fetch all grade types\n  const fetchGradeTypes = async () => {\n    try {\n      const response = await axios.get('/gradeTypes/');\n      setGradeTypes(response.data);\n    } catch (error) {\n      setError('Error fetching grade types');\n      console.error('Error fetching grade types:', error);\n    }\n  };\n\n  // Fetch teachers and disciplines associations\n  const fetchTeachersAndDisciplines = async () => {\n    try {\n      const response = await axios.get(`/curriculums-teachers-disciplines/`);\n      setTeachersAndDisciplines(response.data);\n    } catch (error) {\n      setError('Error fetching teachers and disciplines');\n      console.error('Error fetching teachers and disciplines:', error);\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchStudents();\n    fetchGrades();\n    fetchGradeTypes();\n    fetchTeachersAndDisciplines();\n  }, [classId, teacherId, disciplineId]);\n\n  // Find grade type by ID\n  const findGradeTypeById = id => {\n    const gradeType = gradeTypes.find(gradeType => gradeType.id === id);\n    return gradeType ? gradeType.gradeTypeEnum : 'Unknown';\n  };\n\n  // Add teacher and discipline association\n  const handleAddTeacherDiscipline = async () => {\n    try {\n      const newEntry = {\n        teacherId: newTeacherDiscipline.teacherId,\n        disciplineId: newTeacherDiscipline.disciplineId,\n        curriculumId: curriculum.id\n      };\n\n      // Check if the entry already exists in teachersAndDisciplines\n      const exists = teachersAndDisciplines.some(item => item.teacherId === newEntry.teacherId && item.disciplineId === newEntry.disciplineId);\n      if (exists) {\n        setDuplicateError(\"This teacher and discipline combination already exists.\");\n        return;\n      }\n\n      // Add the new entry to teachersAndDisciplines array\n      await axios.post('/curriculums-teachers-disciplines/', newEntry);\n      setNewTeacherDiscipline({\n        teacherId: '',\n        disciplineId: ''\n      });\n      fetchTeachersAndDisciplines();\n    } catch (error) {\n      console.error('Error adding teacher and discipline:', error);\n      setError('Error adding teacher and discipline');\n    }\n  };\n\n  // Update teacher and discipline association\n  const handleSaveTeacherDiscipline = async updatedItem => {\n    try {\n      await axios.put(`/curriculums-teachers-disciplines/${updatedItem.id}`, updatedItem);\n      setEditTeacherDiscipline(null);\n      fetchTeachersAndDisciplines();\n    } catch (error) {\n      console.error('Error saving teacher and discipline:', error);\n      setError('Error saving teacher and discipline');\n    }\n  };\n\n  // Delete teacher and discipline association\n  const handleDeleteTeacherDiscipline = async id => {\n    if (window.confirm('Are you sure you want to delete this teacher and discipline?')) {\n      try {\n        await axios.delete(`/curriculums-teachers-disciplines/${id}`);\n        fetchTeachersAndDisciplines();\n      } catch (error) {\n        console.error('Error deleting teacher and discipline:', error);\n        setError('Error deleting teacher and discipline');\n      }\n    }\n  };\n\n  // Handle grade selection change\n  const handleGradeChange = (studentId, value) => {\n    setSelectedGrades(prevState => ({\n      ...prevState,\n      [studentId]: value\n    }));\n  };\n\n  // Handle editing a grade\n  const handleEditGrade = grade => {\n    setEditingGrade(grade);\n    setSelectedGrades(prevState => ({\n      ...prevState,\n      [grade.studentId]: grade.gradeTypeId\n    }));\n    setVisibleGradeId(grade.id);\n  };\n\n  // Handle saving an edited grade\n  const handleSaveGrade = async event => {\n    event.preventDefault();\n    try {\n      const selectedGrade = selectedGrades[editingGrade.studentId];\n      await axios.put(`/grades/${editingGrade.id}`, {\n        gradeTypeId: selectedGrade\n      });\n      setSuccessMessage('Grade updated successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n      setSelectedGrades(prevState => ({\n        ...prevState,\n        [editingGrade.studentId]: ''\n      }));\n      setEditingGrade(null);\n      setVisibleGradeId(null);\n      fetchGrades(); // Refresh the grades list\n    } catch (error) {\n      setError('Error updating grade');\n      console.error('Error updating grade:', error);\n    }\n  };\n\n  // Handle adding a grade\n  const handleAddGrade = async (event, studentId) => {\n    event.preventDefault();\n    try {\n      const selectedGrade = selectedGrades[studentId];\n      await axios.post(`/grades`, {\n        gradeTypeId: selectedGrade,\n        studentId,\n        classId,\n        teacherId,\n        disciplineId\n      });\n      setSuccessMessage('Grade added successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n      setSelectedGrades(prevState => ({\n        ...prevState,\n        [studentId]: ''\n      }));\n      fetchGrades(); // Refresh the grades list\n    } catch (error) {\n      setError('Error adding grade');\n      console.error('Error adding grade:', error);\n    }\n  };\n\n  // Handle removing a grade\n  const handleRemoveGrade = async gradeId => {\n    try {\n      await axios.delete(`/grades/${gradeId}`);\n      setSuccessMessage('Grade removed successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n      fetchGrades(); // Refresh the grades list\n    } catch (error) {\n      setError('Error removing grade');\n      console.error('Error removing grade:', error);\n    }\n  };\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Grades for Class ID: \", classId, \", Teacher ID: \", teacherId, \", Discipline ID: \", disciplineId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/admin/school/${classId}`,\n      className: \"btn btn-secondary mb-4\",\n      children: \"Back to Class List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Grades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: grades[student.id] && grades[student.id].length > 0 ? grades[student.id].map(grade => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge badge-${findGradeTypeById(grade.gradeTypeId).toLowerCase()}`,\n              onClick: () => setVisibleGradeId(grade.id === visibleGradeId ? null : grade.id),\n              children: [findGradeTypeById(grade.gradeTypeId), visibleGradeId === grade.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-info ml-2\",\n                  onClick: () => handleEditGrade(grade),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-danger ml-2\",\n                  onClick: () => handleRemoveGrade(grade.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true)]\n            }, grade.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No grades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => handleAddGrade(event, student.id),\n              className: \"add-grade-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  value: selectedGrades[student.id] || '',\n                  onChange: e => handleGradeChange(student.id, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Grade\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 45\n                  }, this), gradeTypes.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: grade.id,\n                    children: grade.gradeTypeEnum\n                  }, grade.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary add-grade-btn\",\n                  children: \"Add Grade\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No students available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), editingGrade && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSaveGrade,\n      className: \"edit-grade-form mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gradeSelectEdit\",\n          className: \"form-label\",\n          children: \"Edit Grade:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"gradeSelectEdit\",\n          className: \"form-select\",\n          value: selectedGrades[editingGrade.studentId] || '',\n          onChange: e => handleGradeChange(editingGrade.studentId, e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), gradeTypes.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: grade.id,\n            children: grade.gradeTypeEnum\n          }, grade.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary me-2\",\n        children: \"Save Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: () => setEditingGrade(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage Teachers and Disciplines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddTeacherDiscipline,\n        className: \"add-teacher-discipline-form mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"teacherSelect\",\n            children: \"Teacher:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"teacherSelect\",\n            className: \"form-select\",\n            value: newTeacherDiscipline.teacherId,\n            onChange: e => setNewTeacherDiscipline({\n              ...newTeacherDiscipline,\n              teacherId: e.target.value\n            }),\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Teacher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"disciplineSelect\",\n            children: \"Discipline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"disciplineSelect\",\n            className: \"form-select\",\n            value: newTeacherDiscipline.disciplineId,\n            onChange: e => setNewTeacherDiscipline({\n              ...newTeacherDiscipline,\n              disciplineId: e.target.value\n            }),\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Discipline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), duplicateError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: duplicateError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Teacher-Discipline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Teacher Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Discipline Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: teachersAndDisciplines.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-primary me-2\",\n                onClick: () => setEditTeacherDiscipline(item),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-danger\",\n                onClick: () => handleDeleteTeacherDiscipline(item.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), editTeacherDiscipline && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => handleSaveTeacherDiscipline(editTeacherDiscipline),\n        className: \"edit-teacher-discipline-form mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit Teacher-Discipline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"editTeacherSelect\",\n            children: \"Teacher:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"editTeacherSelect\",\n            className: \"form-select\",\n            value: editTeacherDiscipline.teacherId,\n            onChange: e => setEditTeacherDiscipline({\n              ...editTeacherDiscipline,\n              teacherId: e.target.value\n            }),\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Teacher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"editDisciplineSelect\",\n            children: \"Discipline:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"editDisciplineSelect\",\n            className: \"form-select\",\n            value: editTeacherDiscipline.disciplineId,\n            onChange: e => setEditTeacherDiscipline({\n              ...editTeacherDiscipline,\n              disciplineId: e.target.value\n            }),\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Discipline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary me-2\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setEditTeacherDiscipline(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentsGrades, \"gy6xIlATosWQ9Rxo+cKxL4Io+8A=\", false, function () {\n  return [useParams];\n});\n_c = StudentsGrades;\nexport default StudentsGrades;\nvar _c;\n$RefreshReg$(_c, \"StudentsGrades\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentsGrades","_s","classId","teacherId","disciplineId","students","setStudents","grades","setGrades","gradeTypes","setGradeTypes","error","setError","successMessage","setSuccessMessage","selectedGrades","setSelectedGrades","editingGrade","setEditingGrade","visibleGradeId","setVisibleGradeId","teachersAndDisciplines","setTeachersAndDisciplines","newTeacherDiscipline","setNewTeacherDiscipline","editTeacherDiscipline","setEditTeacherDiscipline","duplicateError","setDuplicateError","fetchStudents","response","get","data","console","fetchGrades","gradesData","reduce","acc","grade","studentId","push","fetchGradeTypes","fetchTeachersAndDisciplines","findGradeTypeById","id","gradeType","find","gradeTypeEnum","handleAddTeacherDiscipline","newEntry","curriculumId","curriculum","exists","some","item","post","handleSaveTeacherDiscipline","updatedItem","put","handleDeleteTeacherDiscipline","window","confirm","delete","handleGradeChange","value","prevState","handleEditGrade","gradeTypeId","handleSaveGrade","event","preventDefault","selectedGrade","setTimeout","handleAddGrade","handleRemoveGrade","gradeId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","student","name","toLowerCase","onClick","onSubmit","onChange","e","target","required","type","colSpan","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/nadya/Documents/uni/sem 6/lekcii/major/Spring/fullstack-backend/E-Journal/E-Journal-Group-Project/frontend/src/adminView/StudentsGrades.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axiosInstance';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport './StudentsGrades.css'; // Import the CSS file\r\n\r\nconst StudentsGrades = () => {\r\n    const { classId, teacherId, disciplineId } = useParams();\r\n    const [students, setStudents] = useState([]);\r\n    const [grades, setGrades] = useState({});\r\n    const [gradeTypes, setGradeTypes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [selectedGrades, setSelectedGrades] = useState({});\r\n    const [editingGrade, setEditingGrade] = useState(null);\r\n    const [visibleGradeId, setVisibleGradeId] = useState(null);\r\n    const [teachersAndDisciplines, setTeachersAndDisciplines] = useState([]);\r\n    const [newTeacherDiscipline, setNewTeacherDiscipline] = useState({ teacherId: '', disciplineId: '' });\r\n    const [editTeacherDiscipline, setEditTeacherDiscipline] = useState(null);\r\n    const [duplicateError, setDuplicateError] = useState('');\r\n\r\n    // Fetch students in the class\r\n    const fetchStudents = async () => {\r\n        try {\r\n            const response = await axios.get(`/students/school-class/${classId}`);\r\n            setStudents(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching students');\r\n            console.error('Error fetching students:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch grades for each student\r\n    const fetchGrades = async () => {\r\n        try {\r\n            const response = await axios.get(`/students/${teacherId}/discipline/${disciplineId}/grades`);\r\n            const gradesData = response.data.reduce((acc, grade) => {\r\n                acc[grade.studentId] = acc[grade.studentId] || [];\r\n                acc[grade.studentId].push(grade);\r\n                return acc;\r\n            }, {});\r\n            setGrades(gradesData);\r\n        } catch (error) {\r\n            setError('Error fetching grades');\r\n            console.error('Error fetching grades:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch all grade types\r\n    const fetchGradeTypes = async () => {\r\n        try {\r\n            const response = await axios.get('/gradeTypes/');\r\n            setGradeTypes(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching grade types');\r\n            console.error('Error fetching grade types:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch teachers and disciplines associations\r\n    const fetchTeachersAndDisciplines = async () => {\r\n        try {\r\n            const response = await axios.get(`/curriculums-teachers-disciplines/`);\r\n            setTeachersAndDisciplines(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching teachers and disciplines');\r\n            console.error('Error fetching teachers and disciplines:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch initial data on component mount\r\n    useEffect(() => {\r\n        fetchStudents();\r\n        fetchGrades();\r\n        fetchGradeTypes();\r\n        fetchTeachersAndDisciplines();\r\n    }, [classId, teacherId, disciplineId]);\r\n\r\n    // Find grade type by ID\r\n    const findGradeTypeById = (id) => {\r\n        const gradeType = gradeTypes.find(gradeType => gradeType.id === id);\r\n        return gradeType ? gradeType.gradeTypeEnum : 'Unknown';\r\n    };\r\n\r\n    // Add teacher and discipline association\r\n    const handleAddTeacherDiscipline = async () => {\r\n        try {\r\n            const newEntry = {\r\n                teacherId: newTeacherDiscipline.teacherId,\r\n                disciplineId: newTeacherDiscipline.disciplineId,\r\n                curriculumId: curriculum.id\r\n            };\r\n\r\n            // Check if the entry already exists in teachersAndDisciplines\r\n            const exists = teachersAndDisciplines.some(item =>\r\n                item.teacherId === newEntry.teacherId && item.disciplineId === newEntry.disciplineId\r\n            );\r\n\r\n            if (exists) {\r\n                setDuplicateError(\"This teacher and discipline combination already exists.\");\r\n                return;\r\n            }\r\n\r\n            // Add the new entry to teachersAndDisciplines array\r\n            await axios.post('/curriculums-teachers-disciplines/', newEntry);\r\n            setNewTeacherDiscipline({ teacherId: '', disciplineId: '' });\r\n            fetchTeachersAndDisciplines();\r\n        } catch (error) {\r\n            console.error('Error adding teacher and discipline:', error);\r\n            setError('Error adding teacher and discipline');\r\n        }\r\n    };\r\n\r\n    // Update teacher and discipline association\r\n    const handleSaveTeacherDiscipline = async (updatedItem) => {\r\n        try {\r\n            await axios.put(`/curriculums-teachers-disciplines/${updatedItem.id}`, updatedItem);\r\n            setEditTeacherDiscipline(null);\r\n            fetchTeachersAndDisciplines();\r\n        } catch (error) {\r\n            console.error('Error saving teacher and discipline:', error);\r\n            setError('Error saving teacher and discipline');\r\n        }\r\n    };\r\n\r\n    // Delete teacher and discipline association\r\n    const handleDeleteTeacherDiscipline = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this teacher and discipline?')) {\r\n            try {\r\n                await axios.delete(`/curriculums-teachers-disciplines/${id}`);\r\n                fetchTeachersAndDisciplines();\r\n            } catch (error) {\r\n                console.error('Error deleting teacher and discipline:', error);\r\n                setError('Error deleting teacher and discipline');\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle grade selection change\r\n    const handleGradeChange = (studentId, value) => {\r\n        setSelectedGrades(prevState => ({ ...prevState, [studentId]: value }));\r\n    };\r\n\r\n    // Handle editing a grade\r\n    const handleEditGrade = (grade) => {\r\n        setEditingGrade(grade);\r\n        setSelectedGrades(prevState => ({ ...prevState, [grade.studentId]: grade.gradeTypeId }));\r\n        setVisibleGradeId(grade.id);\r\n    };\r\n\r\n    // Handle saving an edited grade\r\n    const handleSaveGrade = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const selectedGrade = selectedGrades[editingGrade.studentId];\r\n            await axios.put(`/grades/${editingGrade.id}`, { gradeTypeId: selectedGrade });\r\n            setSuccessMessage('Grade updated successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n            setSelectedGrades(prevState => ({ ...prevState, [editingGrade.studentId]: '' }));\r\n            setEditingGrade(null);\r\n            setVisibleGradeId(null);\r\n            fetchGrades(); // Refresh the grades list\r\n        } catch (error) {\r\n            setError('Error updating grade');\r\n            console.error('Error updating grade:', error);\r\n        }\r\n    };\r\n\r\n    // Handle adding a grade\r\n    const handleAddGrade = async (event, studentId) => {\r\n        event.preventDefault();\r\n        try {\r\n            const selectedGrade = selectedGrades[studentId];\r\n            await axios.post(`/grades`, { gradeTypeId: selectedGrade, studentId, classId, teacherId, disciplineId });\r\n            setSuccessMessage('Grade added successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n            setSelectedGrades(prevState => ({ ...prevState, [studentId]: '' }));\r\n            fetchGrades(); // Refresh the grades list\r\n        } catch (error) {\r\n            setError('Error adding grade');\r\n            console.error('Error adding grade:', error);\r\n        }\r\n    };\r\n\r\n    // Handle removing a grade\r\n    const handleRemoveGrade = async (gradeId) => {\r\n        try {\r\n            await axios.delete(`/grades/${gradeId}`);\r\n            setSuccessMessage('Grade removed successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n            fetchGrades(); // Refresh the grades list\r\n        } catch (error) {\r\n            setError('Error removing grade');\r\n            console.error('Error removing grade:', error);\r\n        }\r\n    };\r\n\r\n    // Render component\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Grades for Class ID: {classId}, Teacher ID: {teacherId}, Discipline ID: {disciplineId}</h2>\r\n            {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n            {successMessage && <div className=\"alert alert-success\">{successMessage}</div>}\r\n\r\n            <Link to={`/admin/school/${classId}`} className=\"btn btn-secondary mb-4\">Back to Class List</Link>\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Student</th>\r\n                    <th>Grades</th>\r\n                    <th>Current Grade</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {students.length > 0 ? (\r\n                    students.map((student) => (\r\n                        <tr key={student.id}>\r\n                            <td>{student.name}</td>\r\n                            <td>\r\n                                {grades[student.id] && grades[student.id].length > 0 ? (\r\n                                    grades[student.id].map((grade) => (\r\n                                        <span\r\n                                            key={grade.id}\r\n                                            className={`badge badge-${findGradeTypeById(grade.gradeTypeId).toLowerCase()}`}\r\n                                            onClick={() => setVisibleGradeId(grade.id === visibleGradeId ? null : grade.id)}\r\n                                        >\r\n                                                {findGradeTypeById(grade.gradeTypeId)}\r\n                                            {visibleGradeId === grade.id && (\r\n                                                <>\r\n                                                    <button className=\"btn btn-sm btn-info ml-2\" onClick={() => handleEditGrade(grade)}>Edit</button>\r\n                                                    <button className=\"btn btn-sm btn-danger ml-2\" onClick={() => handleRemoveGrade(grade.id)}>Delete</button>\r\n                                                </>\r\n                                            )}\r\n                                            </span>\r\n                                    ))\r\n                                ) : (\r\n                                    <span>No grades</span>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <form onSubmit={(event) => handleAddGrade(event, student.id)} className=\"add-grade-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-select\"\r\n                                            value={selectedGrades[student.id] || ''}\r\n                                            onChange={(e) => handleGradeChange(student.id, e.target.value)}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Grade</option>\r\n                                            {gradeTypes.map((grade) => (\r\n                                                <option key={grade.id} value={grade.id}>{grade.gradeTypeEnum}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button type=\"submit\" className=\"btn btn-primary add-grade-btn\">Add Grade</button>\r\n                                    </div>\r\n                                </form>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                ) : (\r\n                    <tr>\r\n                        <td colSpan=\"5\">No students available</td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n\r\n            {editingGrade && (\r\n                <form onSubmit={handleSaveGrade} className=\"edit-grade-form mt-4\">\r\n                    <h3>Edit Grade</h3>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"gradeSelectEdit\" className=\"form-label\">Edit Grade:</label>\r\n                        <select\r\n                            id=\"gradeSelectEdit\"\r\n                            className=\"form-select\"\r\n                            value={selectedGrades[editingGrade.studentId] || ''}\r\n                            onChange={(e) => handleGradeChange(editingGrade.studentId, e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Grade</option>\r\n                            {gradeTypes.map((grade) => (\r\n                                <option key={grade.id} value={grade.id}>{grade.gradeTypeEnum}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary me-2\">Save Grade</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setEditingGrade(null)}>Cancel</button>\r\n                </form>\r\n            )}\r\n\r\n            {/* Section for managing teachers and disciplines */}\r\n            <div className=\"mt-5\">\r\n                <h3>Manage Teachers and Disciplines</h3>\r\n                <form onSubmit={handleAddTeacherDiscipline} className=\"add-teacher-discipline-form mb-4\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"teacherSelect\">Teacher:</label>\r\n                        <select\r\n                            id=\"teacherSelect\"\r\n                            className=\"form-select\"\r\n                            value={newTeacherDiscipline.teacherId}\r\n                            onChange={(e) => setNewTeacherDiscipline({ ...newTeacherDiscipline, teacherId: e.target.value })}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Teacher</option>\r\n                            {/* Populate with teachers data */}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"disciplineSelect\">Discipline:</label>\r\n                        <select\r\n                            id=\"disciplineSelect\"\r\n                            className=\"form-select\"\r\n                            value={newTeacherDiscipline.disciplineId}\r\n                            onChange={(e) => setNewTeacherDiscipline({ ...newTeacherDiscipline, disciplineId: e.target.value })}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select Discipline</option>\r\n                            {/* Populate with disciplines data */}\r\n                        </select>\r\n                    </div>\r\n                    {duplicateError && <div className=\"alert alert-danger\">{duplicateError}</div>}\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Teacher-Discipline</button>\r\n                </form>\r\n\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Teacher Name</th>\r\n                        <th>Discipline Name</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {teachersAndDisciplines.map((item) => (\r\n                        <tr key={item.id}>\r\n                            <td>{/* Display teacher name */}</td>\r\n                            <td>{/* Display discipline name */}</td>\r\n                            <td>\r\n                                <button className=\"btn btn-sm btn-primary me-2\" onClick={() => setEditTeacherDiscipline(item)}>Edit</button>\r\n                                <button className=\"btn btn-sm btn-danger\" onClick={() => handleDeleteTeacherDiscipline(item.id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* Edit teacher and discipline form */}\r\n                {editTeacherDiscipline && (\r\n                    <form onSubmit={() => handleSaveTeacherDiscipline(editTeacherDiscipline)} className=\"edit-teacher-discipline-form mt-4\">\r\n                        <h4>Edit Teacher-Discipline</h4>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"editTeacherSelect\">Teacher:</label>\r\n                            <select\r\n                                id=\"editTeacherSelect\"\r\n                                className=\"form-select\"\r\n                                value={editTeacherDiscipline.teacherId}\r\n                                onChange={(e) => setEditTeacherDiscipline({ ...editTeacherDiscipline, teacherId: e.target.value })}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Teacher</option>\r\n                                {/* Populate with teachers data */}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"editDisciplineSelect\">Discipline:</label>\r\n                            <select\r\n                                id=\"editDisciplineSelect\"\r\n                                className=\"form-select\"\r\n                                value={editTeacherDiscipline.disciplineId}\r\n                                onChange={(e) => setEditTeacherDiscipline({ ...editTeacherDiscipline, disciplineId: e.target.value })}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select Discipline</option>\r\n                                {/* Populate with disciplines data */}\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary me-2\">Save Changes</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setEditTeacherDiscipline(null)}>Cancel</button>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentsGrades;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}