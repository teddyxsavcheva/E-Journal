{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadya\\\\Documents\\\\uni\\\\sem 6\\\\lekcii\\\\major\\\\Spring\\\\fullstack-backend\\\\E-Journal\\\\E-Journal-Group-Project\\\\frontend\\\\src\\\\adminView\\\\AddDiscipline.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from '../axiosInstance';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useDisciplines = () => {\n  _s();\n  const [disciplines, setDisciplines] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchDisciplines = useCallback(async () => {\n    try {\n      const response = await axios.get('/disciplines/');\n      setDisciplines(response.data);\n    } catch (error) {\n      setError(error);\n      console.error('There was an error fetching the disciplines!', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchDisciplines();\n  }, [fetchDisciplines]);\n  return {\n    disciplines,\n    error,\n    fetchDisciplines\n  };\n};\n_s(useDisciplines, \"CNjS+GwAaMqajqHeRycok3W9trc=\");\nconst useDisciplineTypes = () => {\n  _s2();\n  const [disciplineTypes, setDisciplineTypes] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchDisciplineTypes = useCallback(async () => {\n    try {\n      const response = await axios.get('/discipline-types/');\n      setDisciplineTypes(response.data);\n    } catch (error) {\n      setError(error);\n      console.error('There was an error fetching the discipline types!', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchDisciplineTypes();\n  }, [fetchDisciplineTypes]);\n  return {\n    disciplineTypes,\n    error,\n    fetchDisciplineTypes\n  };\n};\n_s2(useDisciplineTypes, \"VVuDfnCSfpOMXhmJ8V8Ixj4YVHs=\");\nconst useQualificationTypes = () => {\n  _s3();\n  const [qualificationTypes, setQualificationTypes] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchQualificationTypes = useCallback(async () => {\n    try {\n      const response = await axios.get('/teacher-qualifications/');\n      setQualificationTypes(response.data);\n      console.log('Fetched Qualifications:', response.data); // Log fetched qualifications\n    } catch (error) {\n      setError(error);\n      console.error('There was an error fetching the qualification types!', error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchQualificationTypes();\n  }, [fetchQualificationTypes]);\n  return {\n    qualificationTypes,\n    error,\n    fetchQualificationTypes\n  };\n};\n_s3(useQualificationTypes, \"1cX/SyMQHrXLnRIom1gryLF8lOc=\");\nconst DisciplineManagement = () => {\n  _s4();\n  const {\n    disciplines,\n    error,\n    fetchDisciplines\n  } = useDisciplines();\n  const {\n    disciplineTypes,\n    fetchDisciplineTypes\n  } = useDisciplineTypes();\n  const {\n    qualificationTypes,\n    fetchQualificationTypes\n  } = useQualificationTypes();\n  const [editDiscipline, setEditDiscipline] = useState(null);\n  const [newDiscipline, setNewDiscipline] = useState({\n    name: '',\n    disciplineTypeId: ''\n  });\n  const [selectedQualificationId, setSelectedQualificationId] = useState('');\n  const [selectedDisciplineId, setSelectedDisciplineId] = useState('');\n  const [disciplineQualifications, setDisciplineQualifications] = useState([]);\n  const [showQualifications, setShowQualifications] = useState({});\n  const handleChange = (e, setter) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setter(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddDiscipline = async () => {\n    try {\n      const response = await axios.post('/disciplines/', newDiscipline);\n      const addedDiscipline = response.data;\n      setNewDiscipline({\n        name: '',\n        disciplineTypeId: ''\n      });\n      fetchDisciplines();\n      if (selectedQualificationId) {\n        await addQualificationToDiscipline(selectedQualificationId, addedDiscipline.id);\n      }\n    } catch (error) {\n      console.error('Error adding discipline:', error);\n    }\n  };\n  const addQualificationToDiscipline = async (qualificationId, disciplineId) => {\n    try {\n      await axios.post(`/teacher-qualifications/${qualificationId}/disciplines/${disciplineId}`);\n      console.log(`Discipline ${disciplineId} added to qualification ${qualificationId}`);\n      fetchDisciplineQualifications(disciplineId);\n    } catch (error) {\n      console.error('Error adding qualification to discipline:', error);\n    }\n  };\n  const removeQualificationFromDiscipline = async (qualificationId, disciplineId) => {\n    try {\n      await axios.delete(`/teacher-qualifications/${qualificationId}/disciplines/${disciplineId}`);\n      console.log(`Discipline ${disciplineId} removed from qualification ${qualificationId}`);\n      fetchDisciplineQualifications(disciplineId);\n    } catch (error) {\n      console.error('Error removing qualification from discipline:', error);\n    }\n  };\n  const handleEditDiscipline = discipline => setEditDiscipline({\n    ...discipline\n  });\n  const handleSaveDiscipline = async () => {\n    try {\n      await axios.put(`/disciplines/${editDiscipline.id}`, editDiscipline);\n      setEditDiscipline(null);\n      fetchDisciplines();\n    } catch (error) {\n      console.error('Error saving discipline:', error);\n    }\n  };\n  const handleDeleteDiscipline = async disciplineId => {\n    if (window.confirm('Are you sure you want to delete this discipline?')) {\n      try {\n        await axios.delete(`/disciplines/${disciplineId}`);\n        fetchDisciplines();\n      } catch (error) {\n        console.error('Error deleting discipline:', error);\n      }\n    }\n  };\n  const fetchDisciplineQualifications = async disciplineId => {\n    try {\n      const response = await axios.get(`/disciplines/${disciplineId}/qualifications`);\n      setDisciplineQualifications(response.data);\n      setSelectedDisciplineId(disciplineId);\n    } catch (error) {\n      console.error('Error fetching qualifications for discipline:', error);\n    }\n  };\n  const toggleQualifications = disciplineId => {\n    setShowQualifications(prevState => ({\n      ...prevState,\n      [disciplineId]: !prevState[disciplineId]\n    }));\n    if (!showQualifications[disciplineId]) {\n      fetchDisciplineQualifications(disciplineId);\n    }\n  };\n  const availableQualifications = qualificationTypes.filter(q => !disciplineQualifications.some(dq => dq.id === q.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Discipline Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-header\",\n          children: \"Add New Discipline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Discipline Name\",\n              name: \"name\",\n              value: newDiscipline.name,\n              onChange: e => handleChange(e, setNewDiscipline)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              name: \"disciplineTypeId\",\n              value: newDiscipline.disciplineTypeId,\n              onChange: e => handleChange(e, setNewDiscipline),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), disciplineTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.id,\n                children: type.disciplineType\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              name: \"qualificationId\",\n              value: selectedQualificationId,\n              onChange: e => setSelectedQualificationId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a qualification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), qualificationTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.id,\n                children: type.qualificationEnum\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAddDiscipline,\n            children: \"Add Discipline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: disciplines.length > 0 ? disciplines.map(discipline => {\n        var _disciplineTypes$find;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: editDiscipline && editDiscipline.id === discipline.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"name\",\n                    value: editDiscipline.name,\n                    onChange: e => handleChange(e, setEditDiscipline)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select\",\n                    name: \"disciplineTypeId\",\n                    value: editDiscipline.disciplineTypeId,\n                    onChange: e => handleChange(e, setEditDiscipline),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 53\n                    }, this), disciplineTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: type.id,\n                      children: type.disciplineType\n                    }, type.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"d-block mb-1\",\n                  children: discipline.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: (_disciplineTypes$find = disciplineTypes.find(type => type.id === discipline.disciplineTypeId)) === null || _disciplineTypes$find === void 0 ? void 0 : _disciplineTypes$find.disciplineType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [editDiscipline && editDiscipline.id === discipline.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-success me-1\",\n                onClick: handleSaveDiscipline,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-success me-1\",\n                onClick: () => handleEditDiscipline(discipline),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-danger me-1\",\n                onClick: () => handleDeleteDiscipline(discipline.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-secondary me-1\",\n                onClick: () => toggleQualifications(discipline.id),\n                children: showQualifications[discipline.id] ? 'Hide Qualifications' : 'Show Qualifications'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), showQualifications[discipline.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Qualifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: disciplineQualifications.length > 0 ? disciplineQualifications.map(qualification => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between\",\n                children: [qualification.qualificationEnum, /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-danger\",\n                  onClick: () => removeQualificationFromDiscipline(qualification.id, discipline.id),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 53\n                }, this)]\n              }, qualification.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 49\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: \"No qualifications available for this discipline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: selectedQualificationId,\n                onChange: e => setSelectedQualificationId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a qualification to add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 45\n                }, this), availableQualifications.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: type.id,\n                  children: type.qualificationEnum\n                }, type.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-2\",\n              onClick: () => addQualificationToDiscipline(selectedQualificationId, discipline.id),\n              children: \"Add Qualification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this)]\n        }, discipline.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: \"No disciplines available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s4(DisciplineManagement, \"lKuAQqum21q+vEvmMWn6Sv9i8DE=\", false, function () {\n  return [useDisciplines, useDisciplineTypes, useQualificationTypes];\n});\n_c = DisciplineManagement;\nexport default DisciplineManagement;\nvar _c;\n$RefreshReg$(_c, \"DisciplineManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","useDisciplines","_s","disciplines","setDisciplines","error","setError","fetchDisciplines","response","get","data","console","useDisciplineTypes","_s2","disciplineTypes","setDisciplineTypes","fetchDisciplineTypes","useQualificationTypes","_s3","qualificationTypes","setQualificationTypes","fetchQualificationTypes","log","DisciplineManagement","_s4","editDiscipline","setEditDiscipline","newDiscipline","setNewDiscipline","name","disciplineTypeId","selectedQualificationId","setSelectedQualificationId","selectedDisciplineId","setSelectedDisciplineId","disciplineQualifications","setDisciplineQualifications","showQualifications","setShowQualifications","handleChange","e","setter","value","target","prev","handleAddDiscipline","post","addedDiscipline","addQualificationToDiscipline","id","qualificationId","disciplineId","fetchDisciplineQualifications","removeQualificationFromDiscipline","delete","handleEditDiscipline","discipline","handleSaveDiscipline","put","handleDeleteDiscipline","window","confirm","toggleQualifications","prevState","availableQualifications","filter","q","some","dq","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","type","placeholder","onChange","map","disciplineType","qualificationEnum","onClick","length","_disciplineTypes$find","find","qualification","_c","$RefreshReg$"],"sources":["C:/Users/nadya/Documents/uni/sem 6/lekcii/major/Spring/fullstack-backend/E-Journal/E-Journal-Group-Project/frontend/src/adminView/AddDiscipline.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from '../axiosInstance';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useDisciplines = () => {\r\n    const [disciplines, setDisciplines] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDisciplines = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get('/disciplines/');\r\n            setDisciplines(response.data);\r\n        } catch (error) {\r\n            setError(error);\r\n            console.error('There was an error fetching the disciplines!', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDisciplines();\r\n    }, [fetchDisciplines]);\r\n\r\n    return { disciplines, error, fetchDisciplines };\r\n};\r\n\r\nconst useDisciplineTypes = () => {\r\n    const [disciplineTypes, setDisciplineTypes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDisciplineTypes = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get('/discipline-types/');\r\n            setDisciplineTypes(response.data);\r\n        } catch (error) {\r\n            setError(error);\r\n            console.error('There was an error fetching the discipline types!', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDisciplineTypes();\r\n    }, [fetchDisciplineTypes]);\r\n\r\n    return { disciplineTypes, error, fetchDisciplineTypes };\r\n};\r\n\r\nconst useQualificationTypes = () => {\r\n    const [qualificationTypes, setQualificationTypes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchQualificationTypes = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get('/teacher-qualifications/');\r\n            setQualificationTypes(response.data);\r\n            console.log('Fetched Qualifications:', response.data); // Log fetched qualifications\r\n        } catch (error) {\r\n            setError(error);\r\n            console.error('There was an error fetching the qualification types!', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchQualificationTypes();\r\n    }, [fetchQualificationTypes]);\r\n\r\n    return { qualificationTypes, error, fetchQualificationTypes };\r\n};\r\n\r\nconst DisciplineManagement = () => {\r\n    const { disciplines, error, fetchDisciplines } = useDisciplines();\r\n    const { disciplineTypes, fetchDisciplineTypes } = useDisciplineTypes();\r\n    const { qualificationTypes, fetchQualificationTypes } = useQualificationTypes();\r\n    const [editDiscipline, setEditDiscipline] = useState(null);\r\n    const [newDiscipline, setNewDiscipline] = useState({ name: '', disciplineTypeId: '' });\r\n    const [selectedQualificationId, setSelectedQualificationId] = useState('');\r\n    const [selectedDisciplineId, setSelectedDisciplineId] = useState('');\r\n    const [disciplineQualifications, setDisciplineQualifications] = useState([]);\r\n    const [showQualifications, setShowQualifications] = useState({});\r\n\r\n    const handleChange = (e, setter) => {\r\n        const { name, value } = e.target;\r\n        setter((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleAddDiscipline = async () => {\r\n        try {\r\n            const response = await axios.post('/disciplines/', newDiscipline);\r\n            const addedDiscipline = response.data;\r\n\r\n            setNewDiscipline({ name: '', disciplineTypeId: '' });\r\n            fetchDisciplines();\r\n\r\n            if (selectedQualificationId) {\r\n                await addQualificationToDiscipline(selectedQualificationId, addedDiscipline.id);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding discipline:', error);\r\n        }\r\n    };\r\n\r\n    const addQualificationToDiscipline = async (qualificationId, disciplineId) => {\r\n        try {\r\n            await axios.post(`/teacher-qualifications/${qualificationId}/disciplines/${disciplineId}`);\r\n            console.log(`Discipline ${disciplineId} added to qualification ${qualificationId}`);\r\n            fetchDisciplineQualifications(disciplineId);\r\n        } catch (error) {\r\n            console.error('Error adding qualification to discipline:', error);\r\n        }\r\n    };\r\n\r\n    const removeQualificationFromDiscipline = async (qualificationId, disciplineId) => {\r\n        try {\r\n            await axios.delete(`/teacher-qualifications/${qualificationId}/disciplines/${disciplineId}`);\r\n            console.log(`Discipline ${disciplineId} removed from qualification ${qualificationId}`);\r\n            fetchDisciplineQualifications(disciplineId);\r\n        } catch (error) {\r\n            console.error('Error removing qualification from discipline:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditDiscipline = (discipline) => setEditDiscipline({ ...discipline });\r\n\r\n    const handleSaveDiscipline = async () => {\r\n        try {\r\n            await axios.put(`/disciplines/${editDiscipline.id}`, editDiscipline);\r\n            setEditDiscipline(null);\r\n            fetchDisciplines();\r\n        } catch (error) {\r\n            console.error('Error saving discipline:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteDiscipline = async (disciplineId) => {\r\n        if (window.confirm('Are you sure you want to delete this discipline?')) {\r\n            try {\r\n                await axios.delete(`/disciplines/${disciplineId}`);\r\n                fetchDisciplines();\r\n            } catch (error) {\r\n                console.error('Error deleting discipline:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchDisciplineQualifications = async (disciplineId) => {\r\n        try {\r\n            const response = await axios.get(`/disciplines/${disciplineId}/qualifications`);\r\n            setDisciplineQualifications(response.data);\r\n            setSelectedDisciplineId(disciplineId);\r\n        } catch (error) {\r\n            console.error('Error fetching qualifications for discipline:', error);\r\n        }\r\n    };\r\n\r\n    const toggleQualifications = (disciplineId) => {\r\n        setShowQualifications(prevState => ({\r\n            ...prevState,\r\n            [disciplineId]: !prevState[disciplineId]\r\n        }));\r\n\r\n        if (!showQualifications[disciplineId]) {\r\n            fetchDisciplineQualifications(disciplineId);\r\n        }\r\n    };\r\n\r\n    const availableQualifications = qualificationTypes.filter(\r\n        (q) => !disciplineQualifications.some((dq) => dq.id === q.id)\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"mb-4\">\r\n                <h2>Discipline Management</h2>\r\n                {error && <div className=\"alert alert-danger\">Error: {error.message}</div>}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n                <div className=\"card\">\r\n                    <h3 className=\"card-header\">Add New Discipline</h3>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Discipline Name\"\r\n                                name=\"name\"\r\n                                value={newDiscipline.name}\r\n                                onChange={(e) => handleChange(e, setNewDiscipline)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <select\r\n                                className=\"form-select\"\r\n                                name=\"disciplineTypeId\"\r\n                                value={newDiscipline.disciplineTypeId}\r\n                                onChange={(e) => handleChange(e, setNewDiscipline)}\r\n                            >\r\n                                <option value=\"\">Select a type</option>\r\n                                {disciplineTypes.map((type) => (\r\n                                    <option key={type.id} value={type.id}>\r\n                                        {type.disciplineType}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <select\r\n                                className=\"form-select\"\r\n                                name=\"qualificationId\"\r\n                                value={selectedQualificationId}\r\n                                onChange={(e) => setSelectedQualificationId(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Select a qualification</option>\r\n                                {qualificationTypes.map((type) => (\r\n                                    <option key={type.id} value={type.id}>\r\n                                        {type.qualificationEnum}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-primary\" onClick={handleAddDiscipline}>\r\n                            Add Discipline\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ul className=\"list-group\">\r\n                {disciplines.length > 0 ? (\r\n                    disciplines.map((discipline) => (\r\n                        <li key={discipline.id} className=\"list-group-item mb-3\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                                <div>\r\n                                    {editDiscipline && editDiscipline.id === discipline.id ? (\r\n                                        <>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"name\"\r\n                                                    value={editDiscipline.name}\r\n                                                    onChange={(e) => handleChange(e, setEditDiscipline)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <select\r\n                                                    className=\"form-select\"\r\n                                                    name=\"disciplineTypeId\"\r\n                                                    value={editDiscipline.disciplineTypeId}\r\n                                                    onChange={(e) => handleChange(e, setEditDiscipline)}\r\n                                                >\r\n                                                    <option value=\"\">Select a type</option>\r\n                                                    {disciplineTypes.map((type) => (\r\n                                                        <option key={type.id} value={type.id}>\r\n                                                            {type.disciplineType}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <span className=\"d-block mb-1\">{discipline.name}</span>\r\n                                            <span>\r\n                                                {disciplineTypes.find((type) => type.id === discipline.disciplineTypeId)?.disciplineType}\r\n</span>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                                <div>\r\n                                    {editDiscipline && editDiscipline.id === discipline.id ? (\r\n                                        <button className=\"btn btn-sm btn-success me-1\" onClick={handleSaveDiscipline}>\r\n                                            Save\r\n                                        </button>\r\n                                    ) : (\r\n                                        <button className=\"btn btn-sm btn-success me-1\" onClick={() => handleEditDiscipline(discipline)}>\r\n                                            Edit\r\n                                        </button>\r\n                                    )}\r\n                                    <button className=\"btn btn-sm btn-danger me-1\" onClick={() => handleDeleteDiscipline(discipline.id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-sm btn-secondary me-1\"\r\n                                        onClick={() => toggleQualifications(discipline.id)}\r\n                                    >\r\n                                        {showQualifications[discipline.id] ? 'Hide Qualifications' : 'Show Qualifications'}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            {showQualifications[discipline.id] && (\r\n                                <div className=\"mt-3\">\r\n                                    <h4>Qualifications</h4>\r\n                                    <ul className=\"list-group\">\r\n                                        {disciplineQualifications.length > 0 ? (\r\n                                            disciplineQualifications.map((qualification) => (\r\n                                                <li key={qualification.id} className=\"list-group-item d-flex justify-content-between\">\r\n                                                    {qualification.qualificationEnum}\r\n                                                    <button\r\n                                                        className=\"btn btn-sm btn-danger\"\r\n                                                        onClick={() =>\r\n                                                            removeQualificationFromDiscipline(qualification.id, discipline.id)\r\n                                                        }\r\n                                                    >\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </li>\r\n                                            ))\r\n                                        ) : (\r\n                                            <li className=\"list-group-item\">No qualifications available for this discipline</li>\r\n                                        )}\r\n                                    </ul>\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <select\r\n                                            className=\"form-select\"\r\n                                            value={selectedQualificationId}\r\n                                            onChange={(e) => setSelectedQualificationId(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">Select a qualification to add</option>\r\n                                            {availableQualifications.map((type) => (\r\n                                                <option key={type.id} value={type.id}>\r\n                                                    {type.qualificationEnum}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"btn btn-primary mt-2\"\r\n                                        onClick={() => addQualificationToDiscipline(selectedQualificationId, discipline.id)}\r\n                                    >\r\n                                        Add Qualification\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li className=\"list-group-item\">No disciplines available</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DisciplineManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}