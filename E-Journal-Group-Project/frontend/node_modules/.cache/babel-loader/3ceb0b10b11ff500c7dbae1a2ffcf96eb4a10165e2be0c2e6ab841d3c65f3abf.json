{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadya\\\\Documents\\\\uni\\\\sem 6\\\\lekcii\\\\major\\\\Spring\\\\fullstack-backend\\\\E-Journal\\\\E-Journal-Group-Project\\\\frontend\\\\src\\\\adminView\\\\StudentsAbsences.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axiosInstance';\nimport { useParams, Link } from 'react-router-dom';\nimport './StudentsAbsences.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentsAbsences = () => {\n  _s();\n  const {\n    classId,\n    teacherId,\n    disciplineId\n  } = useParams();\n  const [students, setStudents] = useState([]);\n  const [absences, setAbsences] = useState({});\n  const [absenceTypes, setAbsenceTypes] = useState([]);\n  const [absenceStatuses, setAbsenceStatuses] = useState([]);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [editingAbsence, setEditingAbsence] = useState(null);\n  const [visibleAbsenceIds, setVisibleAbsenceIds] = useState({});\n  const [editingAbsences, setEditingAbsences] = useState({});\n  const [addingAbsences, setAddingAbsences] = useState({});\n  const [addingAbsencesStatus, setAddingAbsencesStatus] = useState({});\n  const [excusedAbsencesCount, setExcusedAbsencesCount] = useState({});\n  const [notExcusedAbsencesCount, setNotExcusedAbsencesCount] = useState({});\n\n  // Fetch students in the class\n  const fetchStudents = async () => {\n    try {\n      const response = await axios.get(`/students/school-class/${classId}`);\n      setStudents(response.data);\n    } catch (error) {\n      setError('Error fetching students');\n      console.error('Error fetching students:', error);\n    }\n  };\n\n  // Fetch absences for each student\n  const fetchAbsences = async studentId => {\n    try {\n      const response = await axios.get(`/students/${studentId}/discipline/${disciplineId}/absences`);\n      const studentAbsences = response.data;\n\n      // Update absences and counts for the specific student\n      setAbsences(prevAbsences => ({\n        ...prevAbsences,\n        [studentId]: studentAbsences\n      }));\n      const counts = calculateAbsenceCounts(studentAbsences);\n      setExcusedAbsencesCount(prevCounts => ({\n        ...prevCounts,\n        [studentId]: counts.excusedCount\n      }));\n      setNotExcusedAbsencesCount(prevCounts => ({\n        ...prevCounts,\n        [studentId]: counts.notExcusedCount\n      }));\n    } catch (error) {\n      setError('Error fetching absences');\n      console.error('Error fetching absences:', error);\n    }\n  };\n\n  // Calculate absence counts based on status\n  const calculateAbsenceCounts = absences => {\n    const excusedCount = absences.filter(absence => absence.absenceStatusId === 1).length;\n    const notExcusedCount = absences.filter(absence => absence.absenceStatusId === 2).length;\n    return {\n      excusedCount,\n      notExcusedCount\n    };\n  };\n\n  // Fetch all absence types\n  const fetchAbsenceTypes = async () => {\n    try {\n      const response = await axios.get('/absenceTypes/');\n      setAbsenceTypes(response.data);\n    } catch (error) {\n      setError('Error fetching absence types');\n      console.error('Error fetching absence types:', error);\n    }\n  };\n\n  // Fetch all absence statuses\n  const fetchAbsenceStatuses = async () => {\n    try {\n      const response = await axios.get('/absenceStatuses/');\n      setAbsenceStatuses(response.data);\n    } catch (error) {\n      setError('Error fetching absence statuses');\n      console.error('Error fetching absence statuses:', error);\n    }\n  };\n\n  // Fetch initial data on component mount\n  useEffect(() => {\n    fetchStudents();\n    fetchAbsenceTypes();\n    fetchAbsenceStatuses();\n  }, [classId, teacherId, disciplineId]);\n\n  // Effect to fetch absences whenever students or disciplineId change\n  useEffect(() => {\n    students.forEach(student => {\n      fetchAbsences(student.id);\n    });\n  }, [students, disciplineId]);\n\n  // Add absence to a student\n  const handleAddAbsence = async (event, studentId) => {\n    event.preventDefault();\n    try {\n      const absenceTypeId = addingAbsences[studentId];\n      const absenceStatusId = addingAbsencesStatus[studentId];\n      await axios.post(`/absences/`, {\n        absenceTypeId,\n        absenceStatusId,\n        studentId,\n        disciplineId\n      });\n      setSuccessMessage('Absence added successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Clear the form state\n      setAddingAbsences(prevState => ({\n        ...prevState,\n        [studentId]: ''\n      }));\n      setAddingAbsencesStatus(prevState => ({\n        ...prevState,\n        [studentId]: ''\n      }));\n\n      // Fetch updated absences and recalculate counts\n      fetchAbsences(studentId);\n    } catch (error) {\n      setError('Error adding absence');\n      console.error('Error adding absence:', error);\n    }\n  };\n\n  // Remove absence from a student\n  const handleRemoveAbsence = async absenceId => {\n    try {\n      await axios.delete(`/absences/${absenceId}`);\n      setSuccessMessage('Absence removed successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Update local state to remove the deleted absence\n      const updatedAbsences = {\n        ...absences\n      };\n      Object.keys(updatedAbsences).forEach(studentId => {\n        updatedAbsences[studentId] = updatedAbsences[studentId].filter(absence => absence.id !== absenceId);\n      });\n      setAbsences(updatedAbsences);\n\n      // Recalculate counts after removal\n      students.forEach(student => {\n        const counts = calculateAbsenceCounts(updatedAbsences[student.id] || []);\n        setExcusedAbsencesCount(prevCounts => ({\n          ...prevCounts,\n          [student.id]: counts.excusedCount\n        }));\n        setNotExcusedAbsencesCount(prevCounts => ({\n          ...prevCounts,\n          [student.id]: counts.notExcusedCount\n        }));\n      });\n\n      // Optionally, update visibleAbsenceIds if needed\n      setVisibleAbsenceIds(prevState => {\n        const updatedVisibleAbsenceIds = {\n          ...prevState\n        };\n        delete updatedVisibleAbsenceIds[absenceId];\n        return updatedVisibleAbsenceIds;\n      });\n    } catch (error) {\n      setError('Error removing absence');\n      console.error('Error removing absence:', error);\n    }\n  };\n\n  // Start editing an absence\n  const handleEditAbsence = absence => {\n    setEditingAbsence(absence);\n    setEditingAbsences(prevState => ({\n      ...prevState,\n      [absence.studentId]: absence.absenceTypeId\n    }));\n    setVisibleAbsenceIds(prevState => ({\n      ...prevState,\n      [absence.id]: true\n    }));\n  };\n\n  // Save edited absence\n  const handleSaveAbsence = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.get(`/absences/${editingAbsence.id}`);\n      const existingAbsence = response.data;\n      const updatedAbsence = {\n        ...existingAbsence,\n        absenceTypeId: parseInt(editingAbsences[editingAbsence.studentId], 10)\n      };\n      await axios.put(`/absences/${editingAbsence.id}`, updatedAbsence);\n      setSuccessMessage('Absence updated successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n\n      // Clear state and update visibility\n      setEditingAbsences(prevState => ({\n        ...prevState,\n        [editingAbsence.studentId]: ''\n      }));\n      setEditingAbsence(null);\n      setVisibleAbsenceIds(prevState => ({\n        ...prevState,\n        [editingAbsence.id]: false\n      }));\n\n      // Fetch updated absences and recalculate counts\n      fetchAbsences(editingAbsence.studentId);\n    } catch (error) {\n      setError('Error updating absence');\n      console.error('Error updating absence:', error);\n    }\n  };\n\n  // Handle absence selection change for editing\n  const handleEditAbsenceChange = (studentId, value) => {\n    setEditingAbsences(prevState => ({\n      ...prevState,\n      [studentId]: value\n    }));\n  };\n\n  // Handle absence selection change for adding\n  const handleAddAbsenceChange = (studentId, value) => {\n    setAddingAbsences(prevState => ({\n      ...prevState,\n      [studentId]: value\n    }));\n  };\n\n  // Toggle visibility of absence details\n  const toggleAbsenceVisibility = absenceId => {\n    setVisibleAbsenceIds(prevState => ({\n      ...prevState,\n      [absenceId]: !prevState[absenceId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Absences for Class ID: \", classId, \", Teacher ID: \", teacherId, \", Discipline ID: \", disciplineId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/admin/school/${classId}/classes`,\n      className: \"btn btn-secondary mb-4\",\n      children: \"Back to Class List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Excused\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Not Excused\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Absence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"name\",\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: excusedAbsencesCount[student.id] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: notExcusedAbsencesCount[student.id] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"add\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: event => handleAddAbsence(event, student.id),\n              className: \"add-grade-form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  value: addingAbsences[student.id] || '',\n                  onChange: e => handleAddAbsenceChange(student.id, e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Absence Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 45\n                  }, this), absenceTypes.map(absence => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: absence.id,\n                    children: absence.absenceTypeEnum\n                  }, absence.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  value: addingAbsencesStatus[student.id] || '',\n                  onChange: e => setAddingAbsencesStatus(prevState => ({\n                    ...prevState,\n                    [student.id]: e.target.value\n                  })),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Absence Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 45\n                  }, this), absenceStatuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: status.id,\n                    children: status.absenceStatusEnum\n                  }, status.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary add-absence-btn\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No students available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentsAbsences, \"L62XBR4neDC7r529IZGw+J8Op7U=\", false, function () {\n  return [useParams];\n});\n_c = StudentsAbsences;\nexport default StudentsAbsences;\nvar _c;\n$RefreshReg$(_c, \"StudentsAbsences\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Link","jsxDEV","_jsxDEV","StudentsAbsences","_s","classId","teacherId","disciplineId","students","setStudents","absences","setAbsences","absenceTypes","setAbsenceTypes","absenceStatuses","setAbsenceStatuses","error","setError","successMessage","setSuccessMessage","editingAbsence","setEditingAbsence","visibleAbsenceIds","setVisibleAbsenceIds","editingAbsences","setEditingAbsences","addingAbsences","setAddingAbsences","addingAbsencesStatus","setAddingAbsencesStatus","excusedAbsencesCount","setExcusedAbsencesCount","notExcusedAbsencesCount","setNotExcusedAbsencesCount","fetchStudents","response","get","data","console","fetchAbsences","studentId","studentAbsences","prevAbsences","counts","calculateAbsenceCounts","prevCounts","excusedCount","notExcusedCount","filter","absence","absenceStatusId","length","fetchAbsenceTypes","fetchAbsenceStatuses","forEach","student","id","handleAddAbsence","event","preventDefault","absenceTypeId","post","setTimeout","prevState","handleRemoveAbsence","absenceId","delete","updatedAbsences","Object","keys","updatedVisibleAbsenceIds","handleEditAbsence","handleSaveAbsence","existingAbsence","updatedAbsence","parseInt","put","handleEditAbsenceChange","value","handleAddAbsenceChange","toggleAbsenceVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","name","onSubmit","onChange","e","target","required","absenceTypeEnum","status","absenceStatusEnum","type","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/nadya/Documents/uni/sem 6/lekcii/major/Spring/fullstack-backend/E-Journal/E-Journal-Group-Project/frontend/src/adminView/StudentsAbsences.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axiosInstance';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport './StudentsAbsences.css'; // Import the CSS file\r\n\r\nconst StudentsAbsences = () => {\r\n    const { classId, teacherId, disciplineId } = useParams();\r\n    const [students, setStudents] = useState([]);\r\n    const [absences, setAbsences] = useState({});\r\n    const [absenceTypes, setAbsenceTypes] = useState([]);\r\n    const [absenceStatuses, setAbsenceStatuses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [editingAbsence, setEditingAbsence] = useState(null);\r\n    const [visibleAbsenceIds, setVisibleAbsenceIds] = useState({});\r\n    const [editingAbsences, setEditingAbsences] = useState({});\r\n    const [addingAbsences, setAddingAbsences] = useState({});\r\n    const [addingAbsencesStatus, setAddingAbsencesStatus] = useState({});\r\n    const [excusedAbsencesCount, setExcusedAbsencesCount] = useState({});\r\n    const [notExcusedAbsencesCount, setNotExcusedAbsencesCount] = useState({});\r\n\r\n    // Fetch students in the class\r\n    const fetchStudents = async () => {\r\n        try {\r\n            const response = await axios.get(`/students/school-class/${classId}`);\r\n            setStudents(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching students');\r\n            console.error('Error fetching students:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch absences for each student\r\n    const fetchAbsences = async (studentId) => {\r\n        try {\r\n            const response = await axios.get(`/students/${studentId}/discipline/${disciplineId}/absences`);\r\n            const studentAbsences = response.data;\r\n\r\n            // Update absences and counts for the specific student\r\n            setAbsences(prevAbsences => ({\r\n                ...prevAbsences,\r\n                [studentId]: studentAbsences\r\n            }));\r\n\r\n            const counts = calculateAbsenceCounts(studentAbsences);\r\n\r\n            setExcusedAbsencesCount(prevCounts => ({\r\n                ...prevCounts,\r\n                [studentId]: counts.excusedCount\r\n            }));\r\n\r\n            setNotExcusedAbsencesCount(prevCounts => ({\r\n                ...prevCounts,\r\n                [studentId]: counts.notExcusedCount\r\n            }));\r\n        } catch (error) {\r\n            setError('Error fetching absences');\r\n            console.error('Error fetching absences:', error);\r\n        }\r\n    };\r\n\r\n    // Calculate absence counts based on status\r\n    const calculateAbsenceCounts = (absences) => {\r\n        const excusedCount = absences.filter(absence => absence.absenceStatusId === 1).length;\r\n        const notExcusedCount = absences.filter(absence => absence.absenceStatusId === 2).length;\r\n        return { excusedCount, notExcusedCount };\r\n    };\r\n\r\n    // Fetch all absence types\r\n    const fetchAbsenceTypes = async () => {\r\n        try {\r\n            const response = await axios.get('/absenceTypes/');\r\n            setAbsenceTypes(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching absence types');\r\n            console.error('Error fetching absence types:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch all absence statuses\r\n    const fetchAbsenceStatuses = async () => {\r\n        try {\r\n            const response = await axios.get('/absenceStatuses/');\r\n            setAbsenceStatuses(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching absence statuses');\r\n            console.error('Error fetching absence statuses:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch initial data on component mount\r\n    useEffect(() => {\r\n        fetchStudents();\r\n        fetchAbsenceTypes();\r\n        fetchAbsenceStatuses();\r\n    }, [classId, teacherId, disciplineId]);\r\n\r\n    // Effect to fetch absences whenever students or disciplineId change\r\n    useEffect(() => {\r\n        students.forEach(student => {\r\n            fetchAbsences(student.id);\r\n        });\r\n    }, [students, disciplineId]);\r\n\r\n    // Add absence to a student\r\n    const handleAddAbsence = async (event, studentId) => {\r\n        event.preventDefault();\r\n        try {\r\n            const absenceTypeId = addingAbsences[studentId];\r\n            const absenceStatusId = addingAbsencesStatus[studentId];\r\n            await axios.post(`/absences/`, { absenceTypeId, absenceStatusId, studentId, disciplineId });\r\n\r\n            setSuccessMessage('Absence added successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n\r\n            // Clear the form state\r\n            setAddingAbsences(prevState => ({ ...prevState, [studentId]: '' }));\r\n            setAddingAbsencesStatus(prevState => ({ ...prevState, [studentId]: '' }));\r\n\r\n            // Fetch updated absences and recalculate counts\r\n            fetchAbsences(studentId);\r\n        } catch (error) {\r\n            setError('Error adding absence');\r\n            console.error('Error adding absence:', error);\r\n        }\r\n    };\r\n\r\n    // Remove absence from a student\r\n    const handleRemoveAbsence = async (absenceId) => {\r\n        try {\r\n            await axios.delete(`/absences/${absenceId}`);\r\n\r\n            setSuccessMessage('Absence removed successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n\r\n            // Update local state to remove the deleted absence\r\n            const updatedAbsences = { ...absences };\r\n            Object.keys(updatedAbsences).forEach(studentId => {\r\n                updatedAbsences[studentId] = updatedAbsences[studentId].filter(absence => absence.id !== absenceId);\r\n            });\r\n            setAbsences(updatedAbsences);\r\n\r\n            // Recalculate counts after removal\r\n            students.forEach(student => {\r\n                const counts = calculateAbsenceCounts(updatedAbsences[student.id] || []);\r\n                setExcusedAbsencesCount(prevCounts => ({\r\n                    ...prevCounts,\r\n                    [student.id]: counts.excusedCount\r\n                }));\r\n                setNotExcusedAbsencesCount(prevCounts => ({\r\n                    ...prevCounts,\r\n                    [student.id]: counts.notExcusedCount\r\n                }));\r\n            });\r\n\r\n            // Optionally, update visibleAbsenceIds if needed\r\n            setVisibleAbsenceIds(prevState => {\r\n                const updatedVisibleAbsenceIds = { ...prevState };\r\n                delete updatedVisibleAbsenceIds[absenceId];\r\n                return updatedVisibleAbsenceIds;\r\n            });\r\n        } catch (error) {\r\n            setError('Error removing absence');\r\n            console.error('Error removing absence:', error);\r\n        }\r\n    };\r\n\r\n    // Start editing an absence\r\n    const handleEditAbsence = (absence) => {\r\n        setEditingAbsence(absence);\r\n        setEditingAbsences(prevState => ({ ...prevState, [absence.studentId]: absence.absenceTypeId }));\r\n        setVisibleAbsenceIds(prevState => ({ ...prevState, [absence.id]: true }));\r\n    };\r\n\r\n    // Save edited absence\r\n    const handleSaveAbsence = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.get(`/absences/${editingAbsence.id}`);\r\n            const existingAbsence = response.data;\r\n\r\n            const updatedAbsence = {\r\n                ...existingAbsence,\r\n                absenceTypeId: parseInt(editingAbsences[editingAbsence.studentId], 10)\r\n            };\r\n\r\n            await axios.put(`/absences/${editingAbsence.id}`, updatedAbsence);\r\n\r\n            setSuccessMessage('Absence updated successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000);\r\n\r\n            // Clear state and update visibility\r\n            setEditingAbsences(prevState => ({ ...prevState, [editingAbsence.studentId]: '' }));\r\n            setEditingAbsence(null);\r\n            setVisibleAbsenceIds(prevState => ({ ...prevState, [editingAbsence.id]: false }));\r\n\r\n            // Fetch updated absences and recalculate counts\r\n            fetchAbsences(editingAbsence.studentId);\r\n        } catch (error) {\r\n            setError('Error updating absence');\r\n            console.error('Error updating absence:', error);\r\n        }\r\n    };\r\n\r\n    // Handle absence selection change for editing\r\n    const handleEditAbsenceChange = (studentId, value) => {\r\n        setEditingAbsences(prevState => ({ ...prevState, [studentId]: value }));\r\n    };\r\n\r\n    // Handle absence selection change for adding\r\n    const handleAddAbsenceChange = (studentId, value) => {\r\n        setAddingAbsences(prevState => ({ ...prevState, [studentId]: value }));\r\n    };\r\n\r\n    // Toggle visibility of absence details\r\n    const toggleAbsenceVisibility = (absenceId) => {\r\n        setVisibleAbsenceIds(prevState => ({ ...prevState, [absenceId]: !prevState[absenceId] }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Absences for Class ID: {classId}, Teacher ID: {teacherId}, Discipline ID: {disciplineId}</h2>\r\n            {error && <div className=\"alert alert-danger\">Error: {error}</div>}\r\n            {successMessage && <div className=\"alert alert-success\">{successMessage}</div>}\r\n\r\n            <Link to={`/admin/school/${classId}/classes`} className=\"btn btn-secondary mb-4\">Back to Class List</Link>\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Student</th>\r\n                    <th>Excused</th>\r\n                    <th>Not Excused</th>\r\n                    <th>Current Absence</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {students.length > 0 ? (\r\n                    students.map((student) => (\r\n                        <tr key={student.id}>\r\n                            <td className=\"name\">{student.name}</td>\r\n                            <td>{excusedAbsencesCount[student.id] || 0}</td>\r\n                            <td>{notExcusedAbsencesCount[student.id] || 0}</td>\r\n                            <td className=\"add\">\r\n                                <form onSubmit={(event) => handleAddAbsence(event, student.id)} className=\"add-grade-form\">\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-select\"\r\n                                            value={addingAbsences[student.id] || ''}\r\n                                            onChange={(e) => handleAddAbsenceChange(student.id, e.target.value)}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Absence Type</option>\r\n                                            {absenceTypes.map((absence) => (\r\n                                                <option key={absence.id} value={absence.id}>{absence.absenceTypeEnum}</option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                        <select\r\n                                            className=\"form-select\"\r\n                                            value={addingAbsencesStatus[student.id] || ''}\r\n                                            onChange={(e) => setAddingAbsencesStatus(prevState => ({ ...prevState, [student.id]: e.target.value }))}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Absence Status</option>\r\n                                            {absenceStatuses.map((status) => (\r\n                                                <option key={status.id} value={status.id}>{status.absenceStatusEnum}</option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                        <button type=\"submit\" className=\"btn btn-primary add-absence-btn\">Add</button>\r\n                                    </div>\r\n                                </form>\r\n                            </td>\r\n                        </tr>\r\n                    ))\r\n                ) : (\r\n                    <tr>\r\n                        <td colSpan=\"4\">No students available</td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentsAbsences;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}