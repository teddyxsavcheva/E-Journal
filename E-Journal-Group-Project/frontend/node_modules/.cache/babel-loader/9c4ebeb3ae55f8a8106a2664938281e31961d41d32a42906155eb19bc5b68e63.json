{"ast":null,"code":"import axios from '../axiosInstance';\nexport const fetchAllTeachersFromSchool = async schoolId => {\n  try {\n    const response = await axios.get(`/teacher/school-id/${schoolId}`);\n    // Assuming the response data is an array of objects with id and name properties\n    return response.data.map(teacher => ({\n      id: teacher.id,\n      name: teacher.name\n    }));\n  } catch (error) {\n    console.error('Error fetching teachers:', error);\n    throw error;\n  }\n};\nexport const fetchAllDisciplines = async () => {\n  try {\n    const response = await axios.get('/disciplines/');\n    // Assuming the response data is an array of objects with id and name properties\n    return response.data.map(discipline => ({\n      id: discipline.id,\n      name: discipline.name\n    }));\n  } catch (error) {\n    console.error('Error fetching disciplines:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchAllTeachersFromSchool","schoolId","response","get","data","map","teacher","id","name","error","console","fetchAllDisciplines","discipline"],"sources":["C:/Users/nadya/Documents/uni/sem 6/lekcii/major/Spring/fullstack-backend/E-Journal/E-Journal-Group-Project/frontend/src/components/fetchFunctions.jsx"],"sourcesContent":["import axios from '../axiosInstance';\r\n\r\nexport const fetchAllTeachersFromSchool = async (schoolId) => {\r\n    try {\r\n        const response = await axios.get(`/teacher/school-id/${schoolId}`);\r\n        // Assuming the response data is an array of objects with id and name properties\r\n        return response.data.map(teacher => ({ id: teacher.id, name: teacher.name }));\r\n    } catch (error) {\r\n        console.error('Error fetching teachers:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchAllDisciplines = async () => {\r\n    try {\r\n        const response = await axios.get('/disciplines/');\r\n        // Assuming the response data is an array of objects with id and name properties\r\n        return response.data.map(discipline => ({ id: discipline.id, name: discipline.name }));\r\n    } catch (error) {\r\n        console.error('Error fetching disciplines:', error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AAEpC,OAAO,MAAMC,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,sBAAsBF,QAAQ,EAAE,CAAC;IAClE;IACA,OAAOC,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;MAAEC,EAAE,EAAED,OAAO,CAACC,EAAE;MAAEC,IAAI,EAAEF,OAAO,CAACE;IAAK,CAAC,CAAC,CAAC;EACjF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,eAAe,CAAC;IACjD;IACA,OAAOD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACO,UAAU,KAAK;MAAEL,EAAE,EAAEK,UAAU,CAACL,EAAE;MAAEC,IAAI,EAAEI,UAAU,CAACJ;IAAK,CAAC,CAAC,CAAC;EAC1F,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}